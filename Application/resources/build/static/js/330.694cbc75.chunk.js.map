{"version":3,"file":"static/js/330.694cbc75.chunk.js","mappings":"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","sources":["components/commonFooter/index.js","webpack://myapp/./src/components/commonAside/Aside.module.css?33ac","components/commonAside/index.js","components/commonHeader/index.js","pages/main.js","services/api.js","webpack://myapp/./src/components/commonHeader/header.module.css?7443"],"sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nconst { Footer } = Layout;\n\nconst CommonFooter = () => {\n  return (\n    <Footer\n      style={{\n        textAlign: 'center',\n      }}\n    >\n      Â©{new Date().getFullYear()} Fourntec. All rights reserved.\n    </Footer>\n  );\n};\nexport default CommonFooter;\n","// extracted by mini-css-extract-plugin\nexport default {\"Sider\":\"Aside_Sider__5hpbE\",\"Logo\":\"Aside_Logo__VQBls\",\"Menu\":\"Aside_Menu__QQ43f\",\"menuButton\":\"Aside_menuButton__wt5z+\",\"menuButtonOpen\":\"Aside_menuButtonOpen__ZXy08\",\"menuButtonClosed\":\"Aside_menuButtonClosed__buqBU\"};","import React, { useState, useEffect } from 'react';\nimport * as Icon from '@ant-design/icons';\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport logo from '../../assets/FourntecLogo.png';\nimport { Layout, Menu, ConfigProvider, Button } from 'antd';\nimport style from './Aside.module.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useAuthContext } from '../../contexts/AuthProvider';\n\nconst { Sider } = Layout;\n\nconst iconToElement = name => React.createElement(Icon[name]);\n\nconst CommonAside = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [collapsed, setCollapsed] = useState(false);\n  const { user } = useAuthContext();\n  // for mobile screen size\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), delay);\n    };\n  };\n  // Detect mobile screen size\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileNow = window.innerWidth <= 768;\n      setIsMobile(isMobileNow);\n      if (isMobileNow) {\n        setCollapsed(true); // Keep collapsed on mobile\n        setIsMenuVisible(false); // Hide menu by default on mobile\n      }\n    };\n\n    const debouncedCheckMobile = debounce(checkMobile, 200);\n    window.addEventListener('resize', debouncedCheckMobile);\n    return () => window.removeEventListener('resize', debouncedCheckMobile);\n  }, []);\n\n  const toggleMenu = () => {\n    if (isMobile) {\n      setIsMenuVisible(!isMenuVisible);\n      setCollapsed(true);\n    }\n  };\n\n  // Define common menu items for all users\n  const commonItems = [\n    {\n      key: '/home',\n      icon: 'HomeOutlined',\n      label: 'Home',\n    },\n    {\n      key: '/notifications',\n      icon: 'BellOutlined',\n      label: 'Notifications',\n    },\n  ];\n\n  // Define menu items for different roles\n  const adminItems = [\n    {\n      key: '/user',\n      icon: 'UserOutlined',\n      label: 'User',\n      children: [\n        {\n          key: '/user/approval',\n          label: 'User Approval',\n        },\n        {\n          key: '/user/management',\n          label: 'User Management',\n        },\n      ],\n    },\n    // Only show inventory items for approved users\n    ...(user.reg_status === 'APPROVED'\n      ? [\n          {\n            key: '/inventory',\n            icon: 'ShoppingOutlined',\n            label: 'Inventory',\n            children: [\n              {\n                key: '/inventory/request',\n                label: 'Inventory Request',\n              },\n              {\n                key: '/inventory/operation',\n                label: 'Inventory Operation',\n              },\n              {\n                key: '/inventory/level',\n                label: 'Inventory Level',\n              },\n            ],\n          },\n        ]\n      : []),\n    {\n      key: '/activity',\n      icon: 'FileOutlined',\n      label: 'Activity Log',\n    },\n  ];\n\n  const officeStaffItems = [\n    // Only show inventory items for approved users\n    ...(user.reg_status === 'APPROVED'\n      ? [\n          {\n            key: '/inventory',\n            icon: 'ShoppingOutlined',\n            label: 'Inventory',\n            children: [\n              {\n                key: '/inventory/request',\n                label: 'Inventory Request',\n              },\n              {\n                key: '/inventory/operation',\n                label: 'Inventory Operation',\n              },\n              {\n                key: '/inventory/level',\n                label: 'Inventory Level',\n              },\n            ],\n          },\n        ]\n      : []),\n  ];\n\n  const salespersonItems = [\n    // Only show inventory items for approved users\n    ...(user.reg_status === 'APPROVED'\n      ? [\n          {\n            key: '/inventory',\n            icon: 'ShoppingOutlined',\n            label: 'Inventory',\n            children: [\n              {\n                key: '/inventory/request',\n                label: 'Inventory Request',\n              },\n              {\n                key: '/inventory/level',\n                label: 'Inventory Level',\n              },\n            ],\n          },\n        ]\n      : []),\n  ];\n\n  // Get menu items based on user role\n  const getMenuItems = () => {\n    if (user) {\n      switch (user.role) {\n        case 'ADMIN':\n          return [...commonItems, ...adminItems];\n        case 'OFFICE_STAFF':\n          return [...commonItems, ...officeStaffItems];\n        case 'SALESPERSON':\n          return [...commonItems, ...salespersonItems];\n        default:\n          return commonItems;\n      }\n    }\n    return commonItems;\n  };\n\n  const items = getMenuItems().map(item => {\n    const menuItem = {\n      key: item.key,\n      icon: iconToElement(item.icon),\n      label: item.label,\n    };\n\n    if (item.children) {\n      menuItem.children = item.children.map(child => ({\n        key: child.key,\n        label: child.label,\n      }));\n    }\n\n    return menuItem;\n  });\n\n  const selectMenu = ({ key }) => {\n    navigate(key);\n  };\n\n  const handleLogoClick = () => {\n    navigate('/home');\n  };\n\n  return (\n    <>\n      {isMobile && (\n        <Button\n          className={`${style['menuButton']} ${isMenuVisible ? style['menuButtonOpen'] : style['menuButtonClosed']}`}\n          onClick={toggleMenu}\n          icon={isMenuVisible ? <MenuFoldOutlined style={{ color: '#FFFFFF' }} /> : <MenuUnfoldOutlined style={{ color: '#FFFFFF' }} />}\n        />\n      )}\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          zIndex: 99,\n          display: isMobile && isMenuVisible ? 'block' : 'none',\n        }}\n        onClick={toggleMenu}\n      />\n      <ConfigProvider\n        theme={{\n          components: {\n            Menu: {\n              darkItemSelectedBg: '#4E71CF',\n              darkSubMenuItemBg: '#101627',\n            },\n            Layout: {\n              triggerBg: '#101627',\n            },\n          },\n        }}\n      >\n        <Sider\n          collapsible={!isMobile}\n          collapsed={collapsed}\n          onCollapse={value => setCollapsed(value)}\n          className={style.Sider}\n          style={{\n            width: isMobile ? '100%' : '250px',\n            position: isMobile ? 'fixed' : 'sticky',\n            left: isMobile ? (isMenuVisible ? 0 : '-100%') : 0,\n            zIndex: 100,\n          }}\n        >\n          <div\n            className={style.Logo}\n            style={{\n              height: '15%',\n              margin: '16px',\n              textAlign: 'center',\n              color: 'white',\n            }}\n          >\n            {collapsed ? (\n              <img src={logo} style={{ width: '50px', height: '50px', marginTop: '1vh' }} alt=\"Logo\" onClick={handleLogoClick} />\n            ) : (\n              <img src={logo} style={{ width: '90px', height: '90px', marginTop: '1vh' }} alt=\"Logo\" onClick={handleLogoClick} />\n            )}\n          </div>\n          <Menu\n        theme=\"dark\"\n        selectedKeys={[location.pathname]}\n        mode=\"inline\"\n        items={items}\n        className={style.Menu}\n        onClick={selectMenu}\n        />\n        </Sider>\n      </ConfigProvider>\n    </>\n  );\n};\n\nexport default CommonAside;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Layout,\n  Avatar,\n  Button,\n  message,\n  ConfigProvider,\n  Spin,\n  Dropdown,\n  Badge,\n  List,\n  Typography,\n  Card,\n  Space\n} from 'antd';\nimport {\n  LogoutOutlined,\n  UserOutlined,\n  BellOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport styles from './header.module.css';\nimport ProfilePicture from '../../assets/hutaowave.png';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../../services/api';\n// import { useAuthContext } from '../../contexts/AuthProvider';\n\nconst { Header } = Layout;\nconst { Text } = Typography;\n\nconst CommonHeader = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n//   const { user } = useAuthContext(); // Keep user for future use if needed\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  const fetchNotifications = useCallback(async () => {\n    try {\n      const response = await api.get('/notifications');\n      setNotifications(response.data);\n      setUnreadCount(response.data.filter(notif => notif.notif_status === 'unread').length);\n    } catch (error) {\n      console.error('Failed to fetch notifications:', error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchNotifications();\n\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    const interval = setInterval(fetchNotifications, 30000); // Fetch every 30 seconds\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearInterval(interval);\n    };\n  }, [fetchNotifications]);\n\n  const markAllAsRead = async () => {\n    try {\n      await api.post('/notifications/mark-all-read');\n      fetchNotifications();\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n    }\n  };\n\n  const getNotificationIcon = status => {\n    switch (status) {\n      case 'APPROVED':\n        return <CheckCircleOutlined style={{ color: '#52c41a' }} />;\n      case 'REJECTED':\n        return <CloseCircleOutlined style={{ color: '#f5222d' }} />;\n      default:\n        return <InfoCircleOutlined style={{ color: '#1890ff' }} />;\n    }\n  };\n\n  const handleDropdownVisibleChange = visible => {\n    setDropdownVisible(visible);\n    if (visible && unreadCount > 0) {\n      markAllAsRead();\n    }\n  };\n\n  const getNotificationRoute = (notification) => {\n    const message = notification.message.toLowerCase();\n\n    // Check for registration-related notifications\n    if (message.includes('registration')) {\n        // Extract the Staff ID from the notification message\n        const match = notification.message.match(/Staff ID: (\\d+)/);\n        const staffId = match ? match[1] : null;\n        if (staffId) {\n            return `/user/approval?staffId=${staffId}`;\n        }\n    }\n\n    // Check for product/inventory request notifications\n    if (message.includes('product request')) {\n        const idMatch = notification.message.match(/ID: (\\d+)/);\n        const requestId = idMatch ? idMatch[1] : null;\n        if (requestId) {\n        return `/inventory/request?id=${requestId}`;\n        }\n        // If we couldn't extract an ID, still redirect to the inventory request page\n        return '/inventory/request';\n    }\n\n    // Default to notifications page if no specific route is matched\n    return '/notifications';\n  };\n\n  // Add this handler for notification clicks\n  const handleNotificationClick = (notification) => {\n    const route = getNotificationRoute(notification);\n    setDropdownVisible(false); // Close the dropdown\n    navigate(route); // Navigate to the appropriate route\n  };\n\n  // Modify the notification menu to use the new click handler\n  const NotificationMenu = ({ notifications, onNotificationClick, onViewAll }) => (\n    <Card style={{ width: 300 }}>\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <div style={{ maxHeight: '300px', overflowY: 'auto', marginBottom: '8px' }}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={notifications.slice(0, 3)}\n            renderItem={item => (\n              <List.Item\n                style={{\n                  padding: '12px',\n                  cursor: 'pointer',\n                  transition: 'background-color 0.3s'\n                }}\n                onClick={() => onNotificationClick(item)}\n                className={styles.notificationItem}\n              >\n                <List.Item.Meta\n                  avatar={getNotificationIcon(item.request_status)}\n                  title={\n                    <Text\n                      strong\n                      style={{\n                        color: item.notif_status === 'unread' ? '#1890ff' : 'rgba(0, 0, 0, 0.85)'\n                      }}\n                    >\n                      {item.message}\n                    </Text>\n                  }\n                  description={\n                    <Space direction=\"vertical\" size={4}>\n                      <Text type=\"secondary\" style={{ fontSize: '12px' }}>\n                        {new Date(item.created_at).toLocaleString()}\n                      </Text>\n                    </Space>\n                  }\n                />\n              </List.Item>\n            )}\n          />\n        </div>\n        <div\n          style={{\n            borderTop: '1px solid #f0f0f0',\n            padding: '8px 0',\n            textAlign: 'center',\n            marginTop: 'auto'\n          }}\n        >\n          <Button\n            type=\"link\"\n            onClick={onViewAll}\n            style={{ width: '100%' }}\n          >\n            View all notifications\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await api.post(\n        '/logout',\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        },\n      );\n\n      message.success('Logging out...');\n\n      document.querySelector(`.${styles.header.replace(/[^a-zA-Z0-9-_]/g, '\\\\$&')}`).classList.add(styles.fadeOut);\n\n      setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        navigate('/login');\n      }, 500);\n    } catch (error) {\n      console.error('Logout error:', error);\n      message.error('An error occurred during logout. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const userDropdownItems = {\n    items: [\n      {\n        key: 'logout',\n        label: 'Logout',\n        icon: <LogoutOutlined />,\n        onClick: handleLogout,\n      },\n    ],\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Layout: {\n            headerColor: '#fff',\n          },\n        },\n      }}\n    >\n      <Header className={styles.header}>\n        <h1 className={styles.headerTitle}>{isMobile ? 'Fourntec' : 'Fourntec Inventory Management System'}</h1>\n        <Space>\n        <Dropdown\n        overlay={\n            <NotificationMenu\n            notifications={notifications}\n            onNotificationClick={handleNotificationClick}\n            onViewAll={() => {\n                setDropdownVisible(false);\n                navigate('/notifications');\n            }}\n            />\n        }\n        trigger={['click']}\n        placement=\"bottomRight\"\n        open={dropdownVisible}\n        onOpenChange={handleDropdownVisibleChange}\n        >\n        <Badge count={unreadCount} offset={[-15, 5]}>\n            <Button icon={<BellOutlined />} className={styles.notificationButton} />\n        </Badge>\n        </Dropdown>\n          <Spin spinning={loading} size=\"small\">\n            <Dropdown menu={userDropdownItems} placement=\"bottomRight\" arrow trigger={['click']}>\n              <Avatar\n                icon={<UserOutlined />}\n                src={ProfilePicture}\n                className={styles.avatar}\n                style={{\n                  width: '40px',\n                  height: '40px',\n                  cursor: 'pointer',\n                }}\n              />\n            </Dropdown>\n          </Spin>\n        </Space>\n      </Header>\n    </ConfigProvider>\n  );\n};\n\nexport default CommonHeader;\n","import React from 'react';\nimport { Layout, Flex } from 'antd';\nimport CommonAside from '../components/commonAside/index.js';\nimport CommonHeader from '../components/commonHeader/index.js';\nimport CommonFooter from '../components/commonFooter/index.js';\nimport { Outlet } from 'react-router-dom';\n\nconst { Content } = Layout;\n\nconst Main = () => {\n  return (\n    <Flex gap=\"middle\" wrap>\n      <Layout\n        style={{\n          minHeight: '100vh',\n        }}\n      >\n        <CommonAside />\n        <Layout>\n          <CommonHeader />\n          <Content>\n            <Outlet />\n          </Content>\n          <CommonFooter />\n        </Layout>\n      </Layout>\n    </Flex>\n  );\n};\n\nexport default Main;\n","import axios from 'axios';\n\nconst API_URL = `${process.env.REACT_APP_API_URL}/api`;\n\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      window.location = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst handleApiError = (error) => {\n  console.error('API Error:', error);\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('Error data:', error.response.data);\n    console.error('Error status:', error.response.status);\n    throw new Error(error.response.data.message || 'An error occurred');\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Error request:', error.request);\n    throw new Error('No response received from server');\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Error message:', error.message);\n    throw new Error('Error setting up the request');\n  }\n};\n\n// const loginUser = async (credentials) => {\n//   try {\n//     const response = await axios.post('/api/login', credentials);\n//     const token = response.data.token;\n//     localStorage.setItem('token', token);\n//     // Set up axios to use this token in future requests\n//     axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//     return true;\n//   } catch (error) {\n//     console.error('Login failed:', error);\n//     return false;\n//   }\n// };\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await api.post('/register', userData);\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\nexport const logoutUser = async () => {\n  try {\n    const response = await api.post('/logout');\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\nexport const getPendingUsers = async (search = '') => {\n  try {\n    const response = await api.get('/users/role/PENDING', { params: { search } });\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\nexport const approveUser = async (staffId) => {\n  try {\n    const response = await api.put(`/users/${staffId}/status`, { reg_status: 'APPROVED' });\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\nexport const rejectUser = async (staffId) => {\n  try {\n    const response = await api.put(`/users/${staffId}/status`, { reg_status: 'REJECTED' });\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n  }\n};\n\nconst token = localStorage.getItem('token');\nif (token) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\n// Add more API functions here for other endpoints\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__+IKgv\",\"headerTitle\":\"header_headerTitle__WM1Ht\",\"headerRight\":\"header_headerRight__YjirV\",\"avatar\":\"header_avatar__cj3aR\",\"fadeOut\":\"header_fadeOut__YhYyY\",\"notificationButton\":\"header_notificationButton__C69hU\",\"notificationCard\":\"header_notificationCard__ynDZ6\",\"notificationItem\":\"header_notificationItem__Wt+Gx\",\"viewAllLink\":\"header_viewAllLink__SVXH4\",\"headerLogo\":\"header_headerLogo__CtVx0\"};"],"names":["Footer","Layout","CommonFooter","_jsxs","style","textAlign","children","Date","getFullYear","Sider","CommonAside","navigate","useNavigate","location","useLocation","collapsed","setCollapsed","useState","user","useAuthContext","isMobile","setIsMobile","window","innerWidth","isMenuVisible","setIsMenuVisible","useEffect","debouncedCheckMobile","debounce","func","delay","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","checkMobile","isMobileNow","addEventListener","removeEventListener","toggleMenu","commonItems","key","icon","label","adminItems","reg_status","officeStaffItems","salespersonItems","items","getMenuItems","role","map","item","menuItem","name","React","Icon","child","handleLogoClick","_Fragment","_jsx","Button","className","onClick","MenuFoldOutlined","color","MenuUnfoldOutlined","position","top","left","right","bottom","backgroundColor","zIndex","display","ConfigProvider","theme","components","Menu","darkItemSelectedBg","darkSubMenuItemBg","triggerBg","collapsible","onCollapse","value","width","height","margin","src","logo","marginTop","alt","selectedKeys","pathname","mode","_ref","Header","Text","Typography","CommonHeader","loading","setLoading","notifications","setNotifications","unreadCount","setUnreadCount","dropdownVisible","setDropdownVisible","fetchNotifications","useCallback","async","response","api","get","data","filter","notif","notif_status","error","console","handleResize","interval","setInterval","clearInterval","getNotificationIcon","status","CheckCircleOutlined","CloseCircleOutlined","InfoCircleOutlined","NotificationMenu","onNotificationClick","onViewAll","Card","flexDirection","maxHeight","overflowY","marginBottom","List","itemLayout","dataSource","slice","renderItem","Item","padding","cursor","transition","styles","notificationItem","Meta","avatar","request_status","title","strong","message","description","Space","direction","size","type","fontSize","created_at","toLocaleString","borderTop","userDropdownItems","LogoutOutlined","post","headers","Authorization","localStorage","getItem","success","document","querySelector","header","replace","classList","add","fadeOut","removeItem","headerColor","headerTitle","Dropdown","overlay","notification","route","toLowerCase","includes","match","staffId","idMatch","requestId","getNotificationRoute","trigger","placement","open","onOpenChange","visible","markAllAsRead","Badge","count","offset","BellOutlined","notificationButton","Spin","spinning","menu","arrow","Avatar","UserOutlined","ProfilePicture","Content","Main","Flex","gap","wrap","minHeight","Outlet","axios","create","baseURL","withCredentials","interceptors","request","use","config","token","Promise","reject","defaults","common"],"sourceRoot":""}